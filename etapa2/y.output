Terminals unused in grammar

   TOKEN_ERROR


State 48 conflicts: 1 reduce/reduce
State 79 conflicts: 1 shift/reduce
State 128 conflicts: 13 shift/reduce
State 139 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declist

    2 declist: dec declist
    3        | %empty

    4 dec: funcdec
    5    | vardec

    6 vardec: TK_IDENTIFIER ':' vartypeandvalue ';'

    7 vartypeandvalue: KW_BYTE LIT_CHAR
    8                | KW_BYTE LIT_INTEGER
    9                | KW_SHORT LIT_INTEGER
   10                | KW_LONG LIT_INTEGER
   11                | KW_FLOAT LIT_REAL
   12                | KW_DOUBLE LIT_INTEGER
   13                | KW_BYTE '[' LIT_INTEGER ']' intlist
   14                | KW_BYTE '[' LIT_INTEGER ']' charlist
   15                | KW_SHORT '[' LIT_INTEGER ']' intlist
   16                | KW_LONG '[' LIT_INTEGER ']' intlist
   17                | KW_FLOAT '[' LIT_INTEGER ']' floatlist
   18                | KW_DOUBLE '[' LIT_INTEGER ']' intlist

   19 intlist: LIT_INTEGER intlist
   20        | %empty

   21 charlist: LIT_CHAR charlist
   22         | %empty

   23 floatlist: LIT_REAL floatlist
   24          | %empty

   25 funcdec: vartype TK_IDENTIFIER '(' parameters ')' funcbody ';'

   26 parameters: paramlist
   27           | %empty

   28 paramlist: param ',' paramlist
   29          | param

   30 param: vartype TK_IDENTIFIER

   31 vartype: KW_BYTE
   32        | KW_SHORT
   33        | KW_LONG
   34        | KW_FLOAT
   35        | KW_DOUBLE

   36 funcbody: cmd

   37 cmdlist: cmdlist cmd ';'
   38        | %empty

   39 cmd: atrib
   40    | '{' cmdlist '}'
   41    | KW_READ TK_IDENTIFIER
   42    | KW_PRINT printlist
   43    | KW_RETURN expr
   44    | control
   45    | %empty

   46 printlist: printelement printlist
   47          | printelement

   48 printelement: LIT_STRING
   49             | expr

   50 control: KW_WHEN '(' expr ')' KW_THEN cmd
   51        | KW_WHEN '(' expr ')' KW_THEN cmd KW_ELSE cmd
   52        | KW_WHILE '(' expr ')' cmd
   53        | KW_FOR '(' TK_IDENTIFIER '=' expr KW_TO expr ')' cmd

   54 atrib: TK_IDENTIFIER '=' expr
   55      | TK_IDENTIFIER '#' expr '=' expr

   56 expr: '(' expr ')'
   57     | TK_IDENTIFIER
   58     | TK_IDENTIFIER '[' expr ']'
   59     | TK_IDENTIFIER '(' args ')'
   60     | LIT_INTEGER
   61     | LIT_CHAR
   62     | LIT_REAL
   63     | expr operator expr

   64 args: expr argstail
   65     | %empty

   66 argstail: ',' expr argstail
   67         | %empty

   68 operator: OPERATOR_LE
   69         | OPERATOR_GE
   70         | OPERATOR_EQ
   71         | OPERATOR_NE
   72         | OPERATOR_AND
   73         | OPERATOR_OR
   74         | '*'
   75         | '+'
   76         | '-'
   77         | '/'
   78         | '<'
   79         | '>'
   80         | '!'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 80
'#' (35) 55
'(' (40) 25 50 51 52 53 56 59
')' (41) 25 50 51 52 53 56 59
'*' (42) 74
'+' (43) 75
',' (44) 28 66
'-' (45) 76
'/' (47) 77
':' (58) 6
';' (59) 6 25 37
'<' (60) 78
'=' (61) 53 54 55
'>' (62) 79
'[' (91) 13 14 15 16 17 18 58
']' (93) 13 14 15 16 17 18 58
'{' (123) 40
'}' (125) 40
error (256)
KW_BYTE (258) 7 8 13 14 31
KW_SHORT (259) 9 15 32
KW_LONG (260) 10 16 33
KW_FLOAT (261) 11 17 34
KW_DOUBLE (262) 12 18 35
KW_WHEN (263) 50 51
KW_THEN (264) 50 51
KW_ELSE (265) 51
KW_WHILE (266) 52
KW_FOR (267) 53
KW_TO (268) 53
KW_READ (269) 41
KW_RETURN (270) 43
KW_PRINT (271) 42
OPERATOR_LE (272) 68
OPERATOR_GE (273) 69
OPERATOR_EQ (274) 70
OPERATOR_NE (275) 71
OPERATOR_AND (276) 72
OPERATOR_OR (277) 73
TK_IDENTIFIER (278) 6 25 30 41 53 54 55 57 58 59
LIT_INTEGER (279) 8 9 10 12 13 14 15 16 17 18 19 60
LIT_REAL (280) 11 23 62
LIT_CHAR (281) 7 21 61
LIT_STRING (282) 48
TOKEN_ERROR (283)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
declist (49)
    on left: 2 3, on right: 1 2
dec (50)
    on left: 4 5, on right: 2
vardec (51)
    on left: 6, on right: 5
vartypeandvalue (52)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18, on right: 6
intlist (53)
    on left: 19 20, on right: 13 15 16 18 19
charlist (54)
    on left: 21 22, on right: 14 21
floatlist (55)
    on left: 23 24, on right: 17 23
funcdec (56)
    on left: 25, on right: 4
parameters (57)
    on left: 26 27, on right: 25
paramlist (58)
    on left: 28 29, on right: 26 28
param (59)
    on left: 30, on right: 28 29
vartype (60)
    on left: 31 32 33 34 35, on right: 25 30
funcbody (61)
    on left: 36, on right: 25
cmdlist (62)
    on left: 37 38, on right: 37 40
cmd (63)
    on left: 39 40 41 42 43 44 45, on right: 36 37 50 51 52 53
printlist (64)
    on left: 46 47, on right: 42 46
printelement (65)
    on left: 48 49, on right: 46 47
control (66)
    on left: 50 51 52 53, on right: 44
atrib (67)
    on left: 54 55, on right: 39
expr (68)
    on left: 56 57 58 59 60 61 62 63, on right: 43 49 50 51 52 53 54
    55 56 58 63 64 66
args (69)
    on left: 64 65, on right: 59
argstail (70)
    on left: 66 67, on right: 64 66
operator (71)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80, on right: 63


State 0

    0 $accept: . program $end

    KW_BYTE        shift, and go to state 1
    KW_SHORT       shift, and go to state 2
    KW_LONG        shift, and go to state 3
    KW_FLOAT       shift, and go to state 4
    KW_DOUBLE      shift, and go to state 5
    TK_IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 3 (declist)

    program  go to state 7
    declist  go to state 8
    dec      go to state 9
    vardec   go to state 10
    funcdec  go to state 11
    vartype  go to state 12


State 1

   31 vartype: KW_BYTE .

    $default  reduce using rule 31 (vartype)


State 2

   32 vartype: KW_SHORT .

    $default  reduce using rule 32 (vartype)


State 3

   33 vartype: KW_LONG .

    $default  reduce using rule 33 (vartype)


State 4

   34 vartype: KW_FLOAT .

    $default  reduce using rule 34 (vartype)


State 5

   35 vartype: KW_DOUBLE .

    $default  reduce using rule 35 (vartype)


State 6

    6 vardec: TK_IDENTIFIER . ':' vartypeandvalue ';'

    ':'  shift, and go to state 13


State 7

    0 $accept: program . $end

    $end  shift, and go to state 14


State 8

    1 program: declist .

    $default  reduce using rule 1 (program)


State 9

    2 declist: dec . declist

    KW_BYTE        shift, and go to state 1
    KW_SHORT       shift, and go to state 2
    KW_LONG        shift, and go to state 3
    KW_FLOAT       shift, and go to state 4
    KW_DOUBLE      shift, and go to state 5
    TK_IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 3 (declist)

    declist  go to state 15
    dec      go to state 9
    vardec   go to state 10
    funcdec  go to state 11
    vartype  go to state 12


State 10

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


State 11

    4 dec: funcdec .

    $default  reduce using rule 4 (dec)


State 12

   25 funcdec: vartype . TK_IDENTIFIER '(' parameters ')' funcbody ';'

    TK_IDENTIFIER  shift, and go to state 16


State 13

    6 vardec: TK_IDENTIFIER ':' . vartypeandvalue ';'

    KW_BYTE    shift, and go to state 17
    KW_SHORT   shift, and go to state 18
    KW_LONG    shift, and go to state 19
    KW_FLOAT   shift, and go to state 20
    KW_DOUBLE  shift, and go to state 21

    vartypeandvalue  go to state 22


State 14

    0 $accept: program $end .

    $default  accept


State 15

    2 declist: dec declist .

    $default  reduce using rule 2 (declist)


State 16

   25 funcdec: vartype TK_IDENTIFIER . '(' parameters ')' funcbody ';'

    '('  shift, and go to state 23


State 17

    7 vartypeandvalue: KW_BYTE . LIT_CHAR
    8                | KW_BYTE . LIT_INTEGER
   13                | KW_BYTE . '[' LIT_INTEGER ']' intlist
   14                | KW_BYTE . '[' LIT_INTEGER ']' charlist

    LIT_INTEGER  shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    '['          shift, and go to state 26


State 18

    9 vartypeandvalue: KW_SHORT . LIT_INTEGER
   15                | KW_SHORT . '[' LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 27
    '['          shift, and go to state 28


State 19

   10 vartypeandvalue: KW_LONG . LIT_INTEGER
   16                | KW_LONG . '[' LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 29
    '['          shift, and go to state 30


State 20

   11 vartypeandvalue: KW_FLOAT . LIT_REAL
   17                | KW_FLOAT . '[' LIT_INTEGER ']' floatlist

    LIT_REAL  shift, and go to state 31
    '['       shift, and go to state 32


State 21

   12 vartypeandvalue: KW_DOUBLE . LIT_INTEGER
   18                | KW_DOUBLE . '[' LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 33
    '['          shift, and go to state 34


State 22

    6 vardec: TK_IDENTIFIER ':' vartypeandvalue . ';'

    ';'  shift, and go to state 35


State 23

   25 funcdec: vartype TK_IDENTIFIER '(' . parameters ')' funcbody ';'

    KW_BYTE    shift, and go to state 1
    KW_SHORT   shift, and go to state 2
    KW_LONG    shift, and go to state 3
    KW_FLOAT   shift, and go to state 4
    KW_DOUBLE  shift, and go to state 5

    $default  reduce using rule 27 (parameters)

    parameters  go to state 36
    paramlist   go to state 37
    param       go to state 38
    vartype     go to state 39


State 24

    8 vartypeandvalue: KW_BYTE LIT_INTEGER .

    $default  reduce using rule 8 (vartypeandvalue)


State 25

    7 vartypeandvalue: KW_BYTE LIT_CHAR .

    $default  reduce using rule 7 (vartypeandvalue)


State 26

   13 vartypeandvalue: KW_BYTE '[' . LIT_INTEGER ']' intlist
   14                | KW_BYTE '[' . LIT_INTEGER ']' charlist

    LIT_INTEGER  shift, and go to state 40


State 27

    9 vartypeandvalue: KW_SHORT LIT_INTEGER .

    $default  reduce using rule 9 (vartypeandvalue)


State 28

   15 vartypeandvalue: KW_SHORT '[' . LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 41


State 29

   10 vartypeandvalue: KW_LONG LIT_INTEGER .

    $default  reduce using rule 10 (vartypeandvalue)


State 30

   16 vartypeandvalue: KW_LONG '[' . LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 42


State 31

   11 vartypeandvalue: KW_FLOAT LIT_REAL .

    $default  reduce using rule 11 (vartypeandvalue)


State 32

   17 vartypeandvalue: KW_FLOAT '[' . LIT_INTEGER ']' floatlist

    LIT_INTEGER  shift, and go to state 43


State 33

   12 vartypeandvalue: KW_DOUBLE LIT_INTEGER .

    $default  reduce using rule 12 (vartypeandvalue)


State 34

   18 vartypeandvalue: KW_DOUBLE '[' . LIT_INTEGER ']' intlist

    LIT_INTEGER  shift, and go to state 44


State 35

    6 vardec: TK_IDENTIFIER ':' vartypeandvalue ';' .

    $default  reduce using rule 6 (vardec)


State 36

   25 funcdec: vartype TK_IDENTIFIER '(' parameters . ')' funcbody ';'

    ')'  shift, and go to state 45


State 37

   26 parameters: paramlist .

    $default  reduce using rule 26 (parameters)


State 38

   28 paramlist: param . ',' paramlist
   29          | param .

    ','  shift, and go to state 46

    $default  reduce using rule 29 (paramlist)


State 39

   30 param: vartype . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 47


State 40

   13 vartypeandvalue: KW_BYTE '[' LIT_INTEGER . ']' intlist
   14                | KW_BYTE '[' LIT_INTEGER . ']' charlist

    ']'  shift, and go to state 48


State 41

   15 vartypeandvalue: KW_SHORT '[' LIT_INTEGER . ']' intlist

    ']'  shift, and go to state 49


State 42

   16 vartypeandvalue: KW_LONG '[' LIT_INTEGER . ']' intlist

    ']'  shift, and go to state 50


State 43

   17 vartypeandvalue: KW_FLOAT '[' LIT_INTEGER . ']' floatlist

    ']'  shift, and go to state 51


State 44

   18 vartypeandvalue: KW_DOUBLE '[' LIT_INTEGER . ']' intlist

    ']'  shift, and go to state 52


State 45

   25 funcdec: vartype TK_IDENTIFIER '(' parameters ')' . funcbody ';'

    KW_WHEN        shift, and go to state 53
    KW_WHILE       shift, and go to state 54
    KW_FOR         shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_RETURN      shift, and go to state 57
    KW_PRINT       shift, and go to state 58
    TK_IDENTIFIER  shift, and go to state 59
    '{'            shift, and go to state 60

    $default  reduce using rule 45 (cmd)

    funcbody  go to state 61
    cmd       go to state 62
    control   go to state 63
    atrib     go to state 64


State 46

   28 paramlist: param ',' . paramlist

    KW_BYTE    shift, and go to state 1
    KW_SHORT   shift, and go to state 2
    KW_LONG    shift, and go to state 3
    KW_FLOAT   shift, and go to state 4
    KW_DOUBLE  shift, and go to state 5

    paramlist  go to state 65
    param      go to state 38
    vartype    go to state 39


State 47

   30 param: vartype TK_IDENTIFIER .

    $default  reduce using rule 30 (param)


State 48

   13 vartypeandvalue: KW_BYTE '[' LIT_INTEGER ']' . intlist
   14                | KW_BYTE '[' LIT_INTEGER ']' . charlist

    LIT_INTEGER  shift, and go to state 66
    LIT_CHAR     shift, and go to state 67

    ';'       reduce using rule 20 (intlist)
    ';'       [reduce using rule 22 (charlist)]
    $default  reduce using rule 20 (intlist)

    intlist   go to state 68
    charlist  go to state 69


State 49

   15 vartypeandvalue: KW_SHORT '[' LIT_INTEGER ']' . intlist

    LIT_INTEGER  shift, and go to state 66

    $default  reduce using rule 20 (intlist)

    intlist  go to state 70


State 50

   16 vartypeandvalue: KW_LONG '[' LIT_INTEGER ']' . intlist

    LIT_INTEGER  shift, and go to state 66

    $default  reduce using rule 20 (intlist)

    intlist  go to state 71


State 51

   17 vartypeandvalue: KW_FLOAT '[' LIT_INTEGER ']' . floatlist

    LIT_REAL  shift, and go to state 72

    $default  reduce using rule 24 (floatlist)

    floatlist  go to state 73


State 52

   18 vartypeandvalue: KW_DOUBLE '[' LIT_INTEGER ']' . intlist

    LIT_INTEGER  shift, and go to state 66

    $default  reduce using rule 20 (intlist)

    intlist  go to state 74


State 53

   50 control: KW_WHEN . '(' expr ')' KW_THEN cmd
   51        | KW_WHEN . '(' expr ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 75


State 54

   52 control: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 76


State 55

   53 control: KW_FOR . '(' TK_IDENTIFIER '=' expr KW_TO expr ')' cmd

    '('  shift, and go to state 77


State 56

   41 cmd: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 78


State 57

   43 cmd: KW_RETURN . expr

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 84


State 58

   42 cmd: KW_PRINT . printlist

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    LIT_STRING     shift, and go to state 85
    '('            shift, and go to state 83

    printlist     go to state 86
    printelement  go to state 87
    expr          go to state 88


State 59

   54 atrib: TK_IDENTIFIER . '=' expr
   55      | TK_IDENTIFIER . '#' expr '=' expr

    '='  shift, and go to state 89
    '#'  shift, and go to state 90


State 60

   40 cmd: '{' . cmdlist '}'

    $default  reduce using rule 38 (cmdlist)

    cmdlist  go to state 91


State 61

   25 funcdec: vartype TK_IDENTIFIER '(' parameters ')' funcbody . ';'

    ';'  shift, and go to state 92


State 62

   36 funcbody: cmd .

    $default  reduce using rule 36 (funcbody)


State 63

   44 cmd: control .

    $default  reduce using rule 44 (cmd)


State 64

   39 cmd: atrib .

    $default  reduce using rule 39 (cmd)


State 65

   28 paramlist: param ',' paramlist .

    $default  reduce using rule 28 (paramlist)


State 66

   19 intlist: LIT_INTEGER . intlist

    LIT_INTEGER  shift, and go to state 66

    $default  reduce using rule 20 (intlist)

    intlist  go to state 93


State 67

   21 charlist: LIT_CHAR . charlist

    LIT_CHAR  shift, and go to state 67

    $default  reduce using rule 22 (charlist)

    charlist  go to state 94


State 68

   13 vartypeandvalue: KW_BYTE '[' LIT_INTEGER ']' intlist .

    $default  reduce using rule 13 (vartypeandvalue)


State 69

   14 vartypeandvalue: KW_BYTE '[' LIT_INTEGER ']' charlist .

    $default  reduce using rule 14 (vartypeandvalue)


State 70

   15 vartypeandvalue: KW_SHORT '[' LIT_INTEGER ']' intlist .

    $default  reduce using rule 15 (vartypeandvalue)


State 71

   16 vartypeandvalue: KW_LONG '[' LIT_INTEGER ']' intlist .

    $default  reduce using rule 16 (vartypeandvalue)


State 72

   23 floatlist: LIT_REAL . floatlist

    LIT_REAL  shift, and go to state 72

    $default  reduce using rule 24 (floatlist)

    floatlist  go to state 95


State 73

   17 vartypeandvalue: KW_FLOAT '[' LIT_INTEGER ']' floatlist .

    $default  reduce using rule 17 (vartypeandvalue)


State 74

   18 vartypeandvalue: KW_DOUBLE '[' LIT_INTEGER ']' intlist .

    $default  reduce using rule 18 (vartypeandvalue)


State 75

   50 control: KW_WHEN '(' . expr ')' KW_THEN cmd
   51        | KW_WHEN '(' . expr ')' KW_THEN cmd KW_ELSE cmd

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 96


State 76

   52 control: KW_WHILE '(' . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 97


State 77

   53 control: KW_FOR '(' . TK_IDENTIFIER '=' expr KW_TO expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 98


State 78

   41 cmd: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 41 (cmd)


State 79

   57 expr: TK_IDENTIFIER .
   58     | TK_IDENTIFIER . '[' expr ']'
   59     | TK_IDENTIFIER . '(' args ')'

    '['  shift, and go to state 99
    '('  shift, and go to state 100

    '('       [reduce using rule 57 (expr)]
    $default  reduce using rule 57 (expr)


State 80

   60 expr: LIT_INTEGER .

    $default  reduce using rule 60 (expr)


State 81

   62 expr: LIT_REAL .

    $default  reduce using rule 62 (expr)


State 82

   61 expr: LIT_CHAR .

    $default  reduce using rule 61 (expr)


State 83

   56 expr: '(' . expr ')'

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 101


State 84

   43 cmd: KW_RETURN expr .
   63 expr: expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114

    $default  reduce using rule 43 (cmd)

    operator  go to state 115


State 85

   48 printelement: LIT_STRING .

    $default  reduce using rule 48 (printelement)


State 86

   42 cmd: KW_PRINT printlist .

    $default  reduce using rule 42 (cmd)


State 87

   46 printlist: printelement . printlist
   47          | printelement .

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    LIT_STRING     shift, and go to state 85
    '('            shift, and go to state 83

    $default  reduce using rule 47 (printlist)

    printlist     go to state 116
    printelement  go to state 87
    expr          go to state 88


State 88

   49 printelement: expr .
   63 expr: expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114

    $default  reduce using rule 49 (printelement)

    operator  go to state 115


State 89

   54 atrib: TK_IDENTIFIER '=' . expr

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 117


State 90

   55 atrib: TK_IDENTIFIER '#' . expr '=' expr

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 118


State 91

   37 cmdlist: cmdlist . cmd ';'
   40 cmd: '{' cmdlist . '}'

    KW_WHEN        shift, and go to state 53
    KW_WHILE       shift, and go to state 54
    KW_FOR         shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_RETURN      shift, and go to state 57
    KW_PRINT       shift, and go to state 58
    TK_IDENTIFIER  shift, and go to state 59
    '{'            shift, and go to state 60
    '}'            shift, and go to state 119

    $default  reduce using rule 45 (cmd)

    cmd      go to state 120
    control  go to state 63
    atrib    go to state 64


State 92

   25 funcdec: vartype TK_IDENTIFIER '(' parameters ')' funcbody ';' .

    $default  reduce using rule 25 (funcdec)


State 93

   19 intlist: LIT_INTEGER intlist .

    $default  reduce using rule 19 (intlist)


State 94

   21 charlist: LIT_CHAR charlist .

    $default  reduce using rule 21 (charlist)


State 95

   23 floatlist: LIT_REAL floatlist .

    $default  reduce using rule 23 (floatlist)


State 96

   50 control: KW_WHEN '(' expr . ')' KW_THEN cmd
   51        | KW_WHEN '(' expr . ')' KW_THEN cmd KW_ELSE cmd
   63 expr: expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114
    ')'           shift, and go to state 121

    operator  go to state 115


State 97

   52 control: KW_WHILE '(' expr . ')' cmd
   63 expr: expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114
    ')'           shift, and go to state 122

    operator  go to state 115


State 98

   53 control: KW_FOR '(' TK_IDENTIFIER . '=' expr KW_TO expr ')' cmd

    '='  shift, and go to state 123


State 99

   58 expr: TK_IDENTIFIER '[' . expr ']'

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 124


State 100

   59 expr: TK_IDENTIFIER '(' . args ')'

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    $default  reduce using rule 65 (args)

    expr  go to state 125
    args  go to state 126


State 101

   56 expr: '(' expr . ')'
   63     | expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114
    ')'           shift, and go to state 127

    operator  go to state 115


State 102

   68 operator: OPERATOR_LE .

    $default  reduce using rule 68 (operator)


State 103

   69 operator: OPERATOR_GE .

    $default  reduce using rule 69 (operator)


State 104

   70 operator: OPERATOR_EQ .

    $default  reduce using rule 70 (operator)


State 105

   71 operator: OPERATOR_NE .

    $default  reduce using rule 71 (operator)


State 106

   72 operator: OPERATOR_AND .

    $default  reduce using rule 72 (operator)


State 107

   73 operator: OPERATOR_OR .

    $default  reduce using rule 73 (operator)


State 108

   78 operator: '<' .

    $default  reduce using rule 78 (operator)


State 109

   79 operator: '>' .

    $default  reduce using rule 79 (operator)


State 110

   80 operator: '!' .

    $default  reduce using rule 80 (operator)


State 111

   76 operator: '-' .

    $default  reduce using rule 76 (operator)


State 112

   75 operator: '+' .

    $default  reduce using rule 75 (operator)


State 113

   74 operator: '*' .

    $default  reduce using rule 74 (operator)


State 114

   77 operator: '/' .

    $default  reduce using rule 77 (operator)


State 115

   63 expr: expr operator . expr

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 128


State 116

   46 printlist: printelement printlist .

    $default  reduce using rule 46 (printlist)


State 117

   54 atrib: TK_IDENTIFIER '=' expr .
   63 expr: expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114

    $default  reduce using rule 54 (atrib)

    operator  go to state 115


State 118

   55 atrib: TK_IDENTIFIER '#' expr . '=' expr
   63 expr: expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114
    '='           shift, and go to state 129

    operator  go to state 115


State 119

   40 cmd: '{' cmdlist '}' .

    $default  reduce using rule 40 (cmd)


State 120

   37 cmdlist: cmdlist cmd . ';'

    ';'  shift, and go to state 130


State 121

   50 control: KW_WHEN '(' expr ')' . KW_THEN cmd
   51        | KW_WHEN '(' expr ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 131


State 122

   52 control: KW_WHILE '(' expr ')' . cmd

    KW_WHEN        shift, and go to state 53
    KW_WHILE       shift, and go to state 54
    KW_FOR         shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_RETURN      shift, and go to state 57
    KW_PRINT       shift, and go to state 58
    TK_IDENTIFIER  shift, and go to state 59
    '{'            shift, and go to state 60

    $default  reduce using rule 45 (cmd)

    cmd      go to state 132
    control  go to state 63
    atrib    go to state 64


State 123

   53 control: KW_FOR '(' TK_IDENTIFIER '=' . expr KW_TO expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 133


State 124

   58 expr: TK_IDENTIFIER '[' expr . ']'
   63     | expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114
    ']'           shift, and go to state 134

    operator  go to state 115


State 125

   63 expr: expr . operator expr
   64 args: expr . argstail

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114
    ','           shift, and go to state 135

    $default  reduce using rule 67 (argstail)

    argstail  go to state 136
    operator  go to state 115


State 126

   59 expr: TK_IDENTIFIER '(' args . ')'

    ')'  shift, and go to state 137


State 127

   56 expr: '(' expr ')' .

    $default  reduce using rule 56 (expr)


State 128

   63 expr: expr . operator expr
   63     | expr operator expr .

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114

    OPERATOR_LE   [reduce using rule 63 (expr)]
    OPERATOR_GE   [reduce using rule 63 (expr)]
    OPERATOR_EQ   [reduce using rule 63 (expr)]
    OPERATOR_NE   [reduce using rule 63 (expr)]
    OPERATOR_AND  [reduce using rule 63 (expr)]
    OPERATOR_OR   [reduce using rule 63 (expr)]
    '<'           [reduce using rule 63 (expr)]
    '>'           [reduce using rule 63 (expr)]
    '!'           [reduce using rule 63 (expr)]
    '-'           [reduce using rule 63 (expr)]
    '+'           [reduce using rule 63 (expr)]
    '*'           [reduce using rule 63 (expr)]
    '/'           [reduce using rule 63 (expr)]
    $default      reduce using rule 63 (expr)

    operator  go to state 115


State 129

   55 atrib: TK_IDENTIFIER '#' expr '=' . expr

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 138


State 130

   37 cmdlist: cmdlist cmd ';' .

    $default  reduce using rule 37 (cmdlist)


State 131

   50 control: KW_WHEN '(' expr ')' KW_THEN . cmd
   51        | KW_WHEN '(' expr ')' KW_THEN . cmd KW_ELSE cmd

    KW_WHEN        shift, and go to state 53
    KW_WHILE       shift, and go to state 54
    KW_FOR         shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_RETURN      shift, and go to state 57
    KW_PRINT       shift, and go to state 58
    TK_IDENTIFIER  shift, and go to state 59
    '{'            shift, and go to state 60

    $default  reduce using rule 45 (cmd)

    cmd      go to state 139
    control  go to state 63
    atrib    go to state 64


State 132

   52 control: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 52 (control)


State 133

   53 control: KW_FOR '(' TK_IDENTIFIER '=' expr . KW_TO expr ')' cmd
   63 expr: expr . operator expr

    KW_TO         shift, and go to state 140
    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114

    operator  go to state 115


State 134

   58 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 58 (expr)


State 135

   66 argstail: ',' . expr argstail

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 141


State 136

   64 args: expr argstail .

    $default  reduce using rule 64 (args)


State 137

   59 expr: TK_IDENTIFIER '(' args ')' .

    $default  reduce using rule 59 (expr)


State 138

   55 atrib: TK_IDENTIFIER '#' expr '=' expr .
   63 expr: expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114

    $default  reduce using rule 55 (atrib)

    operator  go to state 115


State 139

   50 control: KW_WHEN '(' expr ')' KW_THEN cmd .
   51        | KW_WHEN '(' expr ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 142

    KW_ELSE   [reduce using rule 50 (control)]
    $default  reduce using rule 50 (control)


State 140

   53 control: KW_FOR '(' TK_IDENTIFIER '=' expr KW_TO . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 79
    LIT_INTEGER    shift, and go to state 80
    LIT_REAL       shift, and go to state 81
    LIT_CHAR       shift, and go to state 82
    '('            shift, and go to state 83

    expr  go to state 143


State 141

   63 expr: expr . operator expr
   66 argstail: ',' expr . argstail

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114
    ','           shift, and go to state 135

    $default  reduce using rule 67 (argstail)

    argstail  go to state 144
    operator  go to state 115


State 142

   51 control: KW_WHEN '(' expr ')' KW_THEN cmd KW_ELSE . cmd

    KW_WHEN        shift, and go to state 53
    KW_WHILE       shift, and go to state 54
    KW_FOR         shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_RETURN      shift, and go to state 57
    KW_PRINT       shift, and go to state 58
    TK_IDENTIFIER  shift, and go to state 59
    '{'            shift, and go to state 60

    $default  reduce using rule 45 (cmd)

    cmd      go to state 145
    control  go to state 63
    atrib    go to state 64


State 143

   53 control: KW_FOR '(' TK_IDENTIFIER '=' expr KW_TO expr . ')' cmd
   63 expr: expr . operator expr

    OPERATOR_LE   shift, and go to state 102
    OPERATOR_GE   shift, and go to state 103
    OPERATOR_EQ   shift, and go to state 104
    OPERATOR_NE   shift, and go to state 105
    OPERATOR_AND  shift, and go to state 106
    OPERATOR_OR   shift, and go to state 107
    '<'           shift, and go to state 108
    '>'           shift, and go to state 109
    '!'           shift, and go to state 110
    '-'           shift, and go to state 111
    '+'           shift, and go to state 112
    '*'           shift, and go to state 113
    '/'           shift, and go to state 114
    ')'           shift, and go to state 146

    operator  go to state 115


State 144

   66 argstail: ',' expr argstail .

    $default  reduce using rule 66 (argstail)


State 145

   51 control: KW_WHEN '(' expr ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 51 (control)


State 146

   53 control: KW_FOR '(' TK_IDENTIFIER '=' expr KW_TO expr ')' . cmd

    KW_WHEN        shift, and go to state 53
    KW_WHILE       shift, and go to state 54
    KW_FOR         shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_RETURN      shift, and go to state 57
    KW_PRINT       shift, and go to state 58
    TK_IDENTIFIER  shift, and go to state 59
    '{'            shift, and go to state 60

    $default  reduce using rule 45 (cmd)

    cmd      go to state 147
    control  go to state 63
    atrib    go to state 64


State 147

   53 control: KW_FOR '(' TK_IDENTIFIER '=' expr KW_TO expr ')' cmd .

    $default  reduce using rule 53 (control)
